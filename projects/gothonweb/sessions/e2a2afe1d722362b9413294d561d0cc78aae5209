KGRwMQpTJ2lwJwpwMgpWMTI3LjAuMC4xCnAzCnNTJ3Jvb20nCnA0CmNjb3B5X3JlZwpfcmVjb25z
dHJ1Y3RvcgpwNQooY2dvdGhvbndlYi5tYXAKUm9vbQpwNgpjX19idWlsdGluX18Kb2JqZWN0CnA3
Ck50UnA4CihkcDkKUydwYXRocycKcDEwCihkcDExClMnc2hvb3QhJwpwMTIKZzUKKGc2Cmc3Ck50
UnAxMwooZHAxNApnMTAKKGRwMTUKc1MnbmFtZScKcDE2ClMnU2hvb3QgRGVhdGgnCnAxNwpzUydk
ZXNjcmlwdGlvbicKcDE4ClMnXG5RdWljayBvbiB0aGUgZHJhdyB5b3UgeWFuayBvdXQgeW91ciBi
bGFzdGVyIGFuZCBmaXJlIGl0IGF0IHRoZSBHb3Rob24uXG5IaXMgY2xvd24gY29zdHVtZSBpcyBm
bG93aW5nIGFuZCBtb3ZpbmcgYXJvdW5kIGhpcyBib2R5LCB3aGljaCB0aHJvd3Ncbm9mZiB5b3Vy
IGFpbS4gIFlvdXIgbGFzZXIgaGl0cyBoaXMgY29zdHVtZSBidXQgbWlzc2VzIGhpbSBlbnRpcmVs
eS4gIFRoaXNcbmNvbXBsZXRlbHkgcnVpbnMgaGlzIGJyYW5kIG5ldyBjb3N0dW1lIGhpcyBtb3Ro
ZXIgYm91Z2h0IGhpbSwgd2hpY2hcbm1ha2VzIGhpbSBmbHkgaW50byBhbiBpbnNhbmUgcmFnZSBh
bmQgYmxhc3QgeW91IHJlcGVhdGVkbHkgaW4gdGhlIGZhY2UgdW50aWxcbnlvdSBhcmUgZGVhZC4g
IFRoZW4gaGUgZWF0cyB5b3UuXG4nCnAxOQpzYnNTJ2RvZGdlIScKcDIwCmc1CihnNgpnNwpOdFJw
MjEKKGRwMjIKZzEwCihkcDIzCnNnMTYKUydEb2RnZSBEZWF0aCcKcDI0CnNnMTgKUyJcbkxpa2Ug
YSB3b3JsZCBjbGFzcyBib3hlciB5b3UgZG9kZ2UsIHdlYXZlLCBzbGlwIGFuZCBzbGlkZSByaWdo
dFxuYXMgdGhlIEdvdGhvbidzIGJsYXN0ZXIgY3JhbmtzIGEgbGFzZXIgcGFzdCB5b3VyIGhlYWQu
XG5JbiB0aGUgbWlkZGxlIG9mIHlvdXIgYXJ0ZnVsIGRvZGdlIHlvdXIgZm9vdCBzbGlwcyBhbmQg
eW91XG5iYW5nIHlvdXIgaGVhZCBvbiB0aGUgbWV0YWwgd2FsbCBhbmQgcGFzcyBvdXQuXG5Zb3Ug
d2FrZSB1cCBzaG9ydGx5IGFmdGVyIG9ubHkgdG8gZGllIGFzIHRoZSBHb3Rob24gc3RvbXBzIG9u
XG55b3VyIGhlYWQgYW5kIGVhdHMgeW91LlxuIgpwMjUKc2JzUyd0ZWxsIGEgam9rZScKcDI2Cmc1
CihnNgpnNwpOdFJwMjcKKGRwMjgKZzEwCihkcDI5ClMnKicKZzUKKGc2Cmc3Ck50UnAzMAooZHAz
MQpnMTAKKGRwMzIKc2cxNgpTJ1dyb25nIENvZGUgRGVhdGgnCnAzMwpzZzE4ClMnXG5UaGUgbG9j
ayBidXp6ZXMgb25lIGxhc3QgdGltZSBhbmQgdGhlbiB5b3UgaGVhciBhIHNpY2tlbmluZ1xubWVs
dGluZyBzb3VuZCBhcyB0aGUgbWVjaGFuaXNtIGlzIGZ1c2VkIHRvZ2V0aGVyLlxuWW91IGRlY2lk
ZSB0byBzaXQgdGhlcmUsIGFuZCBmaW5hbGx5IHRoZSBHb3Rob25zIGJsb3cgdXAgdGhlXG5zaGlw
IGZyb20gdGhlaXIgc2hpcCBhbmQgeW91IGRpZS5cbicKcDM0CnNic1MnMDEzMicKcDM1Cmc1Cihn
NgpnNwpOdFJwMzYKKGRwMzcKZzEwCihkcDM4ClMndGhyb3cgdGhlIGJvbWInCnAzOQpnNQooZzYK
ZzcKTnRScDQwCihkcDQxCmcxMAooZHA0MgpzZzE2ClMnVGhyb3cgQm9tYiBEZWF0aCcKcDQzCnNn
MTgKUydcbkluIGEgcGFuaWMgeW91IHRocm93IHRoZSBib21iIGF0IHRoZSBncm91cCBvZiBHb3Ro
b25zXG5hbmQgbWFrZSBhIGxlYXAgZm9yIHRoZSBkb29yLiAgUmlnaHQgYXMgeW91IGRyb3AgaXQg
YVxuR290aG9uIHNob290cyB5b3UgcmlnaHQgaW4gdGhlIGJhY2sga2lsbGluZyB5b3UuXG5BcyB5
b3UgZGllIHlvdSBzZWUgYW5vdGhlciBHb3Rob24gZnJhbnRpY2FsbHkgdHJ5IHRvIGRpc2FybVxu
dGhlIGJvbWIuIFlvdSBkaWUga25vd2luZyB0aGV5IHdpbGwgcHJvYmFibHkgYmxvdyB1cCB3aGVu
XG5pdCBnb2VzIG9mZi5cbicKcDQ0CnNic1Mnc2xvd2x5IHBsYWNlIHRoZSBib21iJwpwNDUKZzUK
KGc2Cmc3Ck50UnA0NgooZHA0NwpnMTAKKGRwNDgKUycqJwpnNQooZzYKZzcKTnRScDQ5CihkcDUw
CmcxMAooZHA1MQpzZzE2ClMnVGhlIEVuZCcKcDUyCnNnMTgKUydcbllvdSBqdW1wIGludG8gYSBy
YW5kb20gcG9kIGFuZCBoaXQgdGhlIGVqZWN0IGJ1dHRvbi5cblRoZSBwb2QgZXNjYXBlcyBvdXQg
aW50byB0aGUgdm9pZCBvZiBzcGFjZSwgdGhlblxuaW1wbG9kZXMgYXMgdGhlIGh1bGwgcnVwdHVy
ZXMsIGNydXNoaW5nIHlvdXIgYm9keVxuaW50byBqYW0gamVsbHkuXG4nCnA1MwpzYnNTJzInCmc1
CihnNgpnNwpOdFJwNTQKKGRwNTUKZzEwCihkcDU2CnNnMTYKZzUyCnNnMTgKUydcbllvdSBqdW1w
IGludG8gcG9kIDIgYW5kIGhpdCB0aGUgZWplY3QgYnV0dG9uLlxuVGhlIHBvZCBlYXNpbHkgc2xp
ZGVzIG91dCBpbnRvIHNwYWNlIGhlYWRpbmcgdG9cbnRoZSBwbGFuZXQgYmVsb3cuICBBcyBpdCBm
bGllcyB0byB0aGUgcGxhbmV0LCB5b3UgbG9va1xuYmFjayBhbmQgc2VlIHlvdXIgc2hpcCBpbXBs
b2RlIHRoZW4gZXhwbG9kZSBsaWtlIGFcbmJyaWdodCBzdGFyLCB0YWtpbmcgb3V0IHRoZSBHb3Ro
b24gc2hpcCBhdCB0aGUgc2FtZVxudGltZS4gIFlvdSB3b24hXG4nCnA1NwpzYnNzZzE2ClMnRXNj
YXBlIFBvZCcKcDU4CnNnMTgKUyJcbllvdSBwb2ludCB5b3VyIGJsYXN0ZXIgYXQgdGhlIGJvbWIg
dW5kZXIgeW91ciBhcm1cbmFuZCB0aGUgR290aG9ucyBwdXQgdGhlaXIgaGFuZHMgdXAgYW5kIHN0
YXJ0IHRvIHN3ZWF0LlxuWW91IGluY2ggYmFja3dhcmQgdG8gdGhlIGRvb3IsIG9wZW4gaXQsIGFu
ZCB0aGVuIGNhcmVmdWxseVxucGxhY2UgdGhlIGJvbWIgb24gdGhlIGZsb29yLCBwb2ludGluZyB5
b3VyIGJsYXN0ZXIgYXQgaXQuXG5Zb3UgdGhlbiBqdW1wIGJhY2sgdGhyb3VnaCB0aGUgZG9vciwg
cHVuY2ggdGhlIGNsb3NlIGJ1dHRvblxuYW5kIGJsYXN0IHRoZSBsb2NrIHNvIHRoZSBHb3Rob25z
IGNhbid0IGdldCBvdXQuXG5Ob3cgdGhhdCB0aGUgYm9tYiBpcyBwbGFjZWQgeW91IHJ1biB0byB0
aGUgZXNjYXBlIHBvZCB0b1xuZ2V0IG9mZiB0aGlzIHRpbiBjYW4uXG5cbllvdSBydXNoIHRocm91
Z2ggdGhlIHNoaXAgZGVzcGVyYXRlbHkgdHJ5aW5nIHRvIG1ha2UgaXQgdG9cbnRoZSBlc2NhcGUg
cG9kIGJlZm9yZSB0aGUgd2hvbGUgc2hpcCBleHBsb2Rlcy4gIEl0IHNlZW1zIGxpa2VcbmhhcmRs
eSBhbnkgR290aG9ucyBhcmUgb24gdGhlIHNoaXAsIHNvIHlvdXIgcnVuIGlzIGNsZWFyIG9mXG5p
bnRlcmZlcmVuY2UuICBZb3UgZ2V0IHRvIHRoZSBjaGFtYmVyIHdpdGggdGhlIGVzY2FwZSBwb2Rz
LCBhbmRcbm5vdyBuZWVkIHRvIHBpY2sgb25lIHRvIHRha2UuICBTb21lIG9mIHRoZW0gY291bGQg
YmUgZGFtYWdlZFxuYnV0IHlvdSBkb24ndCBoYXZlIHRpbWUgdG8gbG9vay4gIFRoZXJlJ3MgNSBw
b2RzLCB3aGljaCBvbmVcbmRvIHlvdSB0YWtlP1xuIgpwNTkKc2Jzc2cxNgpTJ1RoZSBCcmlkZ2Un
CnA2MApzZzE4ClMiXG5UaGUgY29udGFpbmVyIGNsaWNrcyBvcGVuIGFuZCB0aGUgc2VhbCBicmVh
a3MsIGxldHRpbmcgZ2FzIG91dC5cbllvdSBncmFiIHRoZSBuZXV0cm9uIGJvbWIgYW5kIHJ1biBh
cyBmYXN0IGFzIHlvdSBjYW4gdG8gdGhlXG5icmlkZ2Ugd2hlcmUgeW91IG11c3QgcGxhY2UgaXQg
aW4gdGhlIHJpZ2h0IHNwb3QuXG5cbllvdSBidXJzdCBvbnRvIHRoZSBCcmlkZ2Ugd2l0aCB0aGUg
bmV0cm9uIGRlc3RydWN0IGJvbWJcbnVuZGVyIHlvdXIgYXJtIGFuZCBzdXJwcmlzZSA1IEdvdGhv
bnMgd2hvIGFyZSB0cnlpbmcgdG9cbnRha2UgY29udHJvbCBvZiB0aGUgc2hpcC4gIEVhY2ggb2Yg
dGhlbSBoYXMgYW4gZXZlbiB1Z2xpZXJcbmNsb3duIGNvc3R1bWUgdGhhbiB0aGUgbGFzdC4gIFRo
ZXkgaGF2ZW4ndCBwdWxsZWQgdGhlaXJcbndlYXBvbnMgb3V0IHlldCwgYXMgdGhleSBzZWUgdGhl
IGFjdGl2ZSBib21iIHVuZGVyIHlvdXJcbmFybSBhbmQgZG9uJ3Qgd2FudCB0byBzZXQgaXQgb2Zm
LlxuIgpwNjEKc2Jzc2cxNgpTJ0xhc2VyIFdlYXBvbiBBcm1vcnknCnA2MgpzZzE4ClMiXG5MdWNr
eSBmb3IgeW91IHRoZXkgbWFkZSB5b3UgbGVhcm4gR290aG9uIGluc3VsdHMgaW4gdGhlIGFjYWRl
bXkuXG5Zb3UgdGVsbCB0aGUgb25lIEdvdGhvbiBqb2tlIHlvdSBrbm93OlxuTGJoZSB6Ymd1cmUg
dmYgZmIgc25nLCBqdXJhIGZ1ciBmdmdmIG5lYmhhcSBndXIgdWJoZnIsIGZ1ciBmdmdmIG5lYmhh
cSBndXIgdWJoZnIuXG5UaGUgR290aG9uIHN0b3BzLCB0cmllcyBub3QgdG8gbGF1Z2gsIHRoZW4g
YnVzdHMgb3V0IGxhdWdoaW5nIGFuZCBjYW4ndCBtb3ZlLlxuV2hpbGUgaGUncyBsYXVnaGluZyB5
b3UgcnVuIHVwIGFuZCBzaG9vdCBoaW0gc3F1YXJlIGluIHRoZSBoZWFkXG5wdXR0aW5nIGhpbSBk
b3duLCB0aGVuIGp1bXAgdGhyb3VnaCB0aGUgV2VhcG9uIEFybW9yeSBkb29yLlxuXG5Zb3UgZG8g
YSBkaXZlIHJvbGwgaW50byB0aGUgV2VhcG9uIEFybW9yeSwgY3JvdWNoIGFuZCBzY2FuIHRoZSBy
b29tXG5mb3IgbW9yZSBHb3Rob25zIHRoYXQgbWlnaHQgYmUgaGlkaW5nLiAgSXQncyBkZWFkIHF1
aWV0LCB0b28gcXVpZXQuXG5Zb3Ugc3RhbmQgdXAgYW5kIHJ1biB0byB0aGUgZmFyIHNpZGUgb2Yg
dGhlIHJvb20gYW5kIGZpbmQgdGhlXG5uZXV0cm9uIGJvbWIgaW4gaXRzIGNvbnRhaW5lci4gIFRo
ZXJlJ3MgYSBrZXlwYWQgbG9jayBvbiB0aGUgYm94XG5hbmQgeW91IG5lZWQgdGhlIGNvZGUgdG8g
Z2V0IHRoZSBib21iIG91dC4gIElmIHlvdSBnZXQgdGhlIGNvZGVcbndyb25nIDEwIHRpbWVzIHRo
ZW4gdGhlIGxvY2sgY2xvc2VzIGZvcmV2ZXIgYW5kIHlvdSBjYW4ndFxuZ2V0IHRoZSBib21iLiAg
VGhlIGNvZGUgaXMgMyBkaWdpdHMuXG4iCnA2MwpzYnNzZzE2ClMnQ2VudHJhbCBDb3JyaWRvcicK
cDY0CnNnMTgKUyJcblRoZSBHb3Rob25zIG9mIFBsYW5ldCBQZXJjYWwgIzI1IGhhdmUgaW52YWRl
ZCB5b3VyIHNoaXAgYW5kIGRlc3Ryb3llZFxueW91ciBlbnRpcmUgY3Jldy4gIFlvdSBhcmUgdGhl
IGxhc3Qgc3Vydml2aW5nIG1lbWJlciBhbmQgeW91ciBsYXN0XG5taXNzaW9uIGlzIHRvIGdldCB0
aGUgbmV1dHJvbiBkZXN0cnVjdCBib21iIGZyb20gdGhlIFdlYXBvbnMgQXJtb3J5LFxucHV0IGl0
IGluIHRoZSBicmlkZ2UsIGFuZCBibG93IHRoZSBzaGlwIHVwIGFmdGVyIGdldHRpbmcgaW50byBh
biBcbmVzY2FwZSBwb2QuXG5cbllvdSdyZSBydW5uaW5nIGRvd24gdGhlIGNlbnRyYWwgY29ycmlk
b3IgdG8gdGhlIFdlYXBvbnMgQXJtb3J5IHdoZW5cbmEgR290aG9uIGp1bXBzIG91dCwgcmVkIHNj
YWx5IHNraW4sIGRhcmsgZ3JpbXkgdGVldGgsIGFuZCBldmlsIGNsb3duIGNvc3R1bWVcbmZsb3dp
bmcgYXJvdW5kIGhpcyBoYXRlIGZpbGxlZCBib2R5LiAgSGUncyBibG9ja2luZyB0aGUgZG9vciB0
byB0aGVcbkFybW9yeSBhbmQgYWJvdXQgdG8gcHVsbCBhIHdlYXBvbiB0byBibGFzdCB5b3UuXG4i
CnA2NQpzYnNTJ3Nlc3Npb25faWQnCnA2NgpTJ2UyYTJhZmUxZDcyMjM2MmI5NDEzMjk0ZDU2MWQw
Y2M3OGFhZTUyMDknCnA2NwpzLg==
